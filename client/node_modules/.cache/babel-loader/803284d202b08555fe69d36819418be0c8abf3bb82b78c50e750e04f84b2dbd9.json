{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Development/code/code/phase-4/client prestige properties/client/src/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"V63do9pNTv1q4M9O8C9qYlm3TOw=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useContext","Navigate","AuthContext","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isAuthenticated","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/alexander/Development/code/code/phase-4/client prestige properties/client/src/ProtectedRoute.js"],"sourcesContent":["import { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from './AuthContext';\n\nconst ProtectedRoute = ({ children }) => {\n  const { isAuthenticated } = useContext(AuthContext);\n\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAgB,CAAC,GAAGR,UAAU,CAACE,WAAW,CAAC;EAEnD,IAAI,CAACM,eAAe,EAAE;IACpB,oBAAOJ,OAAA,CAACH,QAAQ;MAACQ,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,OAAOP,QAAQ;AACjB,CAAC;AAACC,EAAA,CARIF,cAAc;AAAAS,EAAA,GAAdT,cAAc;AAUpB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}