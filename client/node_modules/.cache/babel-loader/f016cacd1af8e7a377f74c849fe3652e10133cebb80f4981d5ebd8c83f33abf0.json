{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Development/code/code/phase-4/Prestige-Properties/client/src/components/PropertyList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyList = () => {\n  _s();\n  const [properties, setProperties] = useState([]);\n  const [filter, setFilter] = useState(\"\"); // Add this if you're using a filter\n\n  // Fetch the properties from the backend when the component mounts\n  useEffect(() => {\n    fetch('http://localhost:5000/properties') // Adjust URL if needed\n    .then(response => response.json()).then(data => {\n      setProperties(data); // Set the properties from the backend\n    }).catch(error => {\n      console.error('Error fetching properties:', error);\n    });\n  }, []);\n\n  // Optional: Filter the properties if a filter is provided\n  const filteredProperties = properties.filter(property => property.location.includes(filter));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"property-list\",\n    children: filteredProperties.map(property => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"property-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: property.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: property.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: property.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: property.image_url // Display the image from the backend\n        ,\n        alt: property.name,\n        style: {\n          width: \"300px\",\n          height: \"200px\",\n          objectFit: \"cover\"\n        } // Adjust size as needed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, property.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyList, \"63Vc/1IH0JMosIuNdfoD8iYQf1E=\");\n_c = PropertyList;\nexport default PropertyList;\nvar _c;\n$RefreshReg$(_c, \"PropertyList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PropertyList","_s","properties","setProperties","filter","setFilter","fetch","then","response","json","data","catch","error","console","filteredProperties","property","location","includes","className","children","map","name","fileName","_jsxFileName","lineNumber","columnNumber","price","src","image_url","alt","style","width","height","objectFit","id","_c","$RefreshReg$"],"sources":["/home/alexander/Development/code/code/phase-4/Prestige-Properties/client/src/components/PropertyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst PropertyList = () => {\n  const [properties, setProperties] = useState([]);\n  const [filter, setFilter] = useState(\"\"); // Add this if you're using a filter\n  \n  // Fetch the properties from the backend when the component mounts\n  useEffect(() => {\n    fetch('http://localhost:5000/properties') // Adjust URL if needed\n      .then((response) => response.json())\n      .then((data) => {\n        setProperties(data); // Set the properties from the backend\n      })\n      .catch((error) => {\n        console.error('Error fetching properties:', error);\n      });\n  }, []);\n\n  // Optional: Filter the properties if a filter is provided\n  const filteredProperties = properties.filter((property) =>\n    property.location.includes(filter)\n  );\n\n  return (\n    <div className=\"property-list\">\n      {filteredProperties.map((property) => (\n        <div key={property.id} className=\"property-item\">\n          <h2>{property.name}</h2>\n          <p>{property.location}</p>\n          <p>{property.price}</p>\n          <img\n            src={property.image_url}  // Display the image from the backend\n            alt={property.name}\n            style={{ width: \"300px\", height: \"200px\", objectFit: \"cover\" }} // Adjust size as needed\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default PropertyList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,kCAAkC,CAAC,CAAC;IAAA,CACvCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdP,aAAa,CAACO,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,kBAAkB,GAAGZ,UAAU,CAACE,MAAM,CAAEW,QAAQ,IACpDA,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAACb,MAAM,CACnC,CAAC;EAED,oBACEL,OAAA;IAAKmB,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC3BL,kBAAkB,CAACM,GAAG,CAAEL,QAAQ,iBAC/BhB,OAAA;MAAuBmB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC9CpB,OAAA;QAAAoB,QAAA,EAAKJ,QAAQ,CAACM;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxB1B,OAAA;QAAAoB,QAAA,EAAIJ,QAAQ,CAACC;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B1B,OAAA;QAAAoB,QAAA,EAAIJ,QAAQ,CAACW;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB1B,OAAA;QACE4B,GAAG,EAAEZ,QAAQ,CAACa,SAAU,CAAE;QAAA;QAC1BC,GAAG,EAAEd,QAAQ,CAACM,IAAK;QACnBS,KAAK,EAAE;UAAEC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAQ,CAAE,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC;IAAA,GARMV,QAAQ,CAACmB,EAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAShB,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CArCID,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}