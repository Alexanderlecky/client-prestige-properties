{"ast":null,"code":"var _jsxFileName = \"/home/junior/Development/code/phase-4/Prestige-Properties/client/src/pages/Properties.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropertyList from '../components/PropertyList';\nimport Filter from '../components/Filter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Properties = () => {\n  _s();\n  const [properties, setProperties] = useState([]); // State for storing properties\n  const [filter, setFilter] = useState('');\n  const handleFilterChange = filter => {\n    setFilter(filter);\n  };\n\n  // Fetch properties from the backend\n  const fetchProperties = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/properties'); // Update URL if needed\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setProperties(data); // Set the properties state\n    } catch (error) {\n      console.error('Error fetching properties:', error);\n    }\n  };\n\n  // Use useEffect to fetch properties when the component mounts\n  useEffect(() => {\n    fetchProperties();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"properties\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Property Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      onFilterChange: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PropertyList, {\n      properties: properties,\n      filter: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Properties, \"V26RqR1HtCCC6p2RWkvf60Ndod4=\");\n_c = Properties;\nexport default Properties;\nvar _c;\n$RefreshReg$(_c, \"Properties\");","map":{"version":3,"names":["React","useState","useEffect","PropertyList","Filter","jsxDEV","_jsxDEV","Properties","_s","properties","setProperties","filter","setFilter","handleFilterChange","fetchProperties","response","fetch","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onFilterChange","_c","$RefreshReg$"],"sources":["/home/junior/Development/code/phase-4/Prestige-Properties/client/src/pages/Properties.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropertyList from '../components/PropertyList';\nimport Filter from '../components/Filter';\n\nconst Properties = () => {\n  const [properties, setProperties] = useState([]); // State for storing properties\n  const [filter, setFilter] = useState('');\n\n  const handleFilterChange = (filter) => {\n    setFilter(filter);\n  };\n\n  // Fetch properties from the backend\n  const fetchProperties = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/properties'); // Update URL if needed\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setProperties(data); // Set the properties state\n    } catch (error) {\n      console.error('Error fetching properties:', error);\n    }\n  };\n\n  // Use useEffect to fetch properties when the component mounts\n  useEffect(() => {\n    fetchProperties();\n  }, []);\n\n  return (\n    <div className=\"properties\">\n      <h1>Property Listings</h1>\n      <Filter onFilterChange={handleFilterChange} />\n      <PropertyList properties={properties} filter={filter} /> {/* Pass properties here */}\n    </div>\n  );\n}\n\nexport default Properties;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,kBAAkB,GAAIF,MAAM,IAAK;IACrCC,SAAS,CAACD,MAAM,CAAC;EACnB,CAAC;;EAED;EACA,MAAMG,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC;MAClE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCV,aAAa,CAACS,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACdY,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBlB,OAAA;MAAAkB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BtB,OAAA,CAACF,MAAM;MAACyB,cAAc,EAAEhB;IAAmB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9CtB,OAAA,CAACH,YAAY;MAACM,UAAU,EAAEA,UAAW;MAACE,MAAM,EAAEA;IAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAAApB,EAAA,CAlCKD,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AAoChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}