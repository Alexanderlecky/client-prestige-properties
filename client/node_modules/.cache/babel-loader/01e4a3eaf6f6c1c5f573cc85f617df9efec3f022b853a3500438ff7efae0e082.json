{"ast":null,"code":"var _jsxFileName = \"/home/alexander/Development/code/code/phase-4/Prestige-Properties/client/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../AuthContext';\nimport \"../styles/Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const {\n    login\n  } = useContext(AuthContext);\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const navigate = useNavigate();\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Simulate authentication process\n    if (credentials.username === 'user' && credentials.password === 'password') {\n      login(); // Update auth state to authenticated\n      navigate('/'); // Redirect to home page\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: credentials.username,\n        onChange: e => setCredentials({\n          ...credentials,\n          username: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: credentials.password,\n        onChange: e => setCredentials({\n          ...credentials,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"mrI+739q2bwwNi6rMfJrR9F8lfQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useContext","useState","useNavigate","AuthContext","jsxDEV","_jsxDEV","Login","_s","login","credentials","setCredentials","username","password","navigate","handleSubmit","e","preventDefault","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/alexander/Development/code/code/phase-4/Prestige-Properties/client/src/components/Login.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AuthContext } from '../AuthContext';\nimport \"../styles/Login.css\"\n\nfunction Login() {\n  const { login } = useContext(AuthContext);\n  const [credentials, setCredentials] = useState({ username: '', password: '' });\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    // Simulate authentication process\n    if (credentials.username === 'user' && credentials.password === 'password') {\n      login(); // Update auth state to authenticated\n      navigate('/'); // Redirect to home page\n    } else {\n      alert('Invalid credentials');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          value={credentials.username}\n          onChange={(e) => setCredentials({ ...credentials, username: e.target.value })}\n        />\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={credentials.password}\n          onChange={(e) => setCredentials({ ...credentials, password: e.target.value })}\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      \n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM;IAAEC;EAAM,CAAC,GAAGR,UAAU,CAACG,WAAW,CAAC;EACzC,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC;IAAEU,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC9E,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;IACA,IAAIP,WAAW,CAACE,QAAQ,KAAK,MAAM,IAAIF,WAAW,CAACG,QAAQ,KAAK,UAAU,EAAE;MAC1EJ,KAAK,CAAC,CAAC,CAAC,CAAC;MACTK,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,MAAM;MACLI,KAAK,CAAC,qBAAqB,CAAC;IAC9B;EACF,CAAC;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdjB,OAAA;MAAMkB,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBAC3Bb,OAAA;QACEmB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEjB,WAAW,CAACE,QAAS;QAC5BgB,QAAQ,EAAGZ,CAAC,IAAKL,cAAc,CAAC;UAAE,GAAGD,WAAW;UAAEE,QAAQ,EAAEI,CAAC,CAACa,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,eACFjB,OAAA;QACEmB,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEjB,WAAW,CAACG,QAAS;QAC5Be,QAAQ,EAAGZ,CAAC,IAAKL,cAAc,CAAC;UAAE,GAAGD,WAAW;UAAEG,QAAQ,EAAEG,CAAC,CAACa,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E,CAAC,eACFjB,OAAA;QAAQmB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV;AAACf,EAAA,CAtCQD,KAAK;EAAA,QAGKJ,WAAW;AAAA;AAAA2B,EAAA,GAHrBvB,KAAK;AAwCd,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}